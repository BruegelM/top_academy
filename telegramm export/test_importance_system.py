#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
"""

import asyncio
import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from database import DatabaseManager
from config import ZELIBOBA_ANALYSIS_PROMPT

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_importance_calculation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç–æ–≤"""
    
    db = DatabaseManager()
    if not db.connect():
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω–æ—Å—Ç–∏")
        logger.info("=" * 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç
        logger.info("üìù –ù–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è Zeliboba:")
        logger.info(f"   {ZELIBOBA_ANALYSIS_PROMPT[:200]}...")
        logger.info("=" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø –≤–∞–∂–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
        logger.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-10 –≤–∞–∂–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ —Å –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –æ—Ü–µ–Ω–∫–æ–π...")
        important_posts = db.get_top_important_posts_for_publication(limit=10)
        
        if not important_posts:
            logger.warning("–ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏")
            return
        
        logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(important_posts)} –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        logger.info("=" * 60)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ—Å—Ç—É
        for i, post in enumerate(important_posts, 1):
            details = post.get('importance_details', {})
            
            logger.info(f"üèÜ –ü–û–°–¢ #{i} - –í–∞–∂–Ω–æ—Å—Ç—å: {post['importance_score']}/10")
            logger.info(f"   üì∫ –ö–∞–Ω–∞–ª: {post['channel_title']}")
            logger.info(f"   üìÖ –î–∞—Ç–∞: {post['date_published']}")
            logger.info(f"   üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {post['content'][:100]}...")
            
            logger.info("   üìà –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏:")
            logger.info(f"      ü§ñ AI –æ—Ü–µ–Ω–∫–∞: {details.get('ai_importance', 'N/A')}/10")
            logger.info(f"      üí¨ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {details.get('engagement_score', 'N/A')}")
            logger.info(f"      üè® –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –æ—Ç–µ–ª—è–º: {details.get('hotel_relation_score', 'N/A')}")
            logger.info(f"      üè≠ –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∏–Ω–¥—É—Å—Ç—Ä–∏—é: {details.get('industry_impact_score', 'N/A')}")
            logger.info(f"      üòä –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {details.get('sentiment_score', 'N/A')}")
            
            logger.info("   üìä –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ—Å—Ç–∞:")
            logger.info(f"      üëç –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏: {details.get('positive_reactions', 0)}")
            logger.info(f"      üîÑ –†–µ–ø–æ—Å—Ç—ã: {details.get('forwards', 0)}")
            logger.info(f"      üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {details.get('replies', 0)}")
            logger.info(f"      üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {details.get('views', 0)}")
            logger.info("-" * 60)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–∞–∫—Ç–æ—Ä–∞–º –≤–∞–∂–Ω–æ—Å—Ç–∏
        logger.info("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –§–ê–ö–¢–û–†–ê–ú –í–ê–ñ–ù–û–°–¢–ò:")
        
        ai_scores = [p.get('importance_details', {}).get('ai_importance', 0) for p in important_posts]
        engagement_scores = [p.get('importance_details', {}).get('engagement_score', 0) for p in important_posts]
        hotel_scores = [p.get('importance_details', {}).get('hotel_relation_score', 0) for p in important_posts]
        
        if ai_scores:
            logger.info(f"   ü§ñ –°—Ä–µ–¥–Ω—è—è AI –æ—Ü–µ–Ω–∫–∞: {sum(ai_scores)/len(ai_scores):.2f}")
        if engagement_scores:
            logger.info(f"   üí¨ –°—Ä–µ–¥–Ω—è—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: {sum(engagement_scores)/len(engagement_scores):.2f}")
        if hotel_scores:
            logger.info(f"   üè® –ü–æ—Å—Ç–æ–≤ —Å –æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º –∫ –æ—Ç–µ–ª—è–º: {sum(1 for s in hotel_scores if s > 0)}")
        
        logger.info("=" * 60)
        logger.info("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    finally:
        db.disconnect()

def show_importance_formula():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É–ª—É —Ä–∞—Å—á–µ—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏"""
    logger.info("üßÆ –§–û–†–ú–£–õ–ê –†–ê–°–ß–ï–¢–ê –í–ê–ñ–ù–û–°–¢–ò –ù–û–í–û–°–¢–ï–ô:")
    logger.info("=" * 60)
    logger.info("üìä –§–∞–∫—Ç–æ—Ä—ã –∏ –∏—Ö –≤–µ—Å–∞:")
    logger.info("   ü§ñ AI –æ—Ü–µ–Ω–∫–∞ (1-10): 40% –≤–µ—Å–∞")
    logger.info("   üí¨ –í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å: 20% –≤–µ—Å–∞")
    logger.info("      - –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ √ó 0.3")
    logger.info("      - –†–µ–ø–æ—Å—Ç—ã √ó 0.4 (—Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π)")
    logger.info("      - –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ √ó 0.2")
    logger.info("      - –ü—Ä–æ—Å–º–æ—Ç—Ä—ã √∑ 1000 √ó 0.1")
    logger.info("   üè® –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –æ—Ç–µ–ª—è–º: 18% –≤–µ—Å–∞")
    logger.info("      - –ü—Ä—è–º–æ–µ: 3 –±–∞–ª–ª–∞")
    logger.info("      - –ö–æ—Å–≤–µ–Ω–Ω–æ–µ: 1 –±–∞–ª–ª")
    logger.info("      - –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: 0 –±–∞–ª–ª–æ–≤")
    logger.info("   üè≠ –í–ª–∏—è–Ω–∏–µ –Ω–∞ –∏–Ω–¥—É—Å—Ç—Ä–∏—é: 15% –≤–µ—Å–∞")
    logger.info("      - –í—ã—Å–æ–∫–æ–µ: 3 –±–∞–ª–ª–∞")
    logger.info("      - –°—Ä–µ–¥–Ω–µ–µ: 2 –±–∞–ª–ª–∞")
    logger.info("      - –ù–∏–∑–∫–æ–µ: 1 –±–∞–ª–ª")
    logger.info("   üòä –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: 7% –≤–µ—Å–∞")
    logger.info("      - –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è: +1 –±–∞–ª–ª")
    logger.info("      - –ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è: -0.5 –±–∞–ª–ª–∞")
    logger.info("      - –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è: 0 –±–∞–ª–ª–æ–≤")
    logger.info("=" * 60)

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("=" * 60)
    
    show_importance_formula()
    test_importance_calculation()